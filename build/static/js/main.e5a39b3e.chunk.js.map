{"version":3,"sources":["logo.svg","components/page1/musicListItem.js","components/page1/musicList.js","components/page1/page1.js","components/page2/weatherData.js","components/page2/page2.js","components/page3/imageItem.js","components/page3/imageList.js","components/page3/page3.js","components/navbar.js","components/mainpage/mainpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MusicListItem","props","time","Date","data","releaseDate","console","log","className","onClick","e","window","open","trackViewUrl","src","artworkUrl100","style","color","trackName","primaryGenreName","collectionPrice","toLocaleDateString","MusicList","error","songs","length","map","id","key","trackId","Page1","useState","search","setSearch","results","setResults","setError","Form","Row","Col","Control","placeholder","onChange","target","value","onKeyPress","charCode","preventDefault","string","replace","axios","get","then","res","resultCount","catch","err","handleKeyPress","WeatherData","alt","found","time1","sys","sunset","time2","sunrise","temp1","temp2","weather","icon","name","country","width","height","main","temp","toLocaleTimeString","humidity","pressure","wind","speed","deg","feels_like","Page2","setFound","ImageItem","small","largeImageURL","large","imageList","images","content","Container","Page3","hits","totalHits","Navbar","to","Mainpage","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5a39b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './musicListItem.css'\r\n\r\nfunction MusicListItem(props) {\r\n\r\n    const time= new Date(props.data.releaseDate);\r\n    console.log(props.data)\r\n  return (\r\n    <div className=\"MusicListItem\" onClick={e =>{  window.open(props.data.trackViewUrl);}}>\r\n      <img src={props.data.artworkUrl100}></img>\r\n      <div className=\"MusicListItemData\">\r\n        <h1 style={{color:\"white\"}}>SONG:{props.data.trackName}</h1>\r\n        <h4 style={{color:\"white\"}}>Type:{props.data.primaryGenreName}\r\n        , Track price: {props.data.collectionPrice}$</h4>\r\n        <h4 style={{color:\"white\"}}>Release date: {time.toLocaleDateString()}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default MusicListItem;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport MusicListItem from './musicListItem'\r\n\r\nfunction MusicList(props) {\r\n\r\n    if(props.error===true){\r\n      return <div>\r\n        <h1 style={{color:\"Red\"}}>Error, no songs found</h1>\r\n      </div>\r\n    }\r\n    if(props.songs.length>0)\r\n    {\r\n        const content = props.songs.map(id => {\r\n      return (\r\n            <MusicListItem key={id.trackId} data={id}></MusicListItem>\r\n  \r\n      );\r\n    });\r\n    return content\r\n    }\r\n    else\r\n     return <div></div>\r\n}\r\n//react router\r\nexport default MusicList;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport MusicList from './musicList'\r\n\r\nfunction Page1() {\r\n\r\n    const [search, setSearch] = useState(\"\");// Search bar value\r\n    const [results,setResults] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleKeyPress=(e)=>{\r\n        if(e.charCode==13){\r\n            e.preventDefault();\r\n            console.log(\"enter pressed\")\r\n            console.log(search)\r\n            const string = search.replace(\" \",\"+\");\r\n            console.log(string);\r\n\r\n            axios.get('https://itunes.apple.com/search?term='+string+'&limit=5&entity=song')\r\n            .then(res => {\r\n            //   const persons = res.data;\r\n            //   this.setState({ persons });\r\n            console.log(res.data) //res.data.resultCount for number , res.data.results for []\r\n            if(res.data.resultCount===0) // error\r\n            {\r\n              setError(true);\r\n            }\r\n            else{\r\n              setError(false);\r\n            }\r\n            setResults(res.data.results);\r\n            })\r\n            .catch(err=>console.log(err));\r\n            \r\n        } \r\n      }\r\n\r\n    const handleInput = event => {//saves Search bar value for later use\r\n        setSearch(event.target.value);\r\n        console.log(search)\r\n      };\r\n  return (\r\n    <div className=\"Page1\">\r\n        <h1 style={{color:\"white\"}}>Enter desired search for itunes:</h1>\r\n           <Form>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control placeholder=\"Search here\" onChange={e => handleInput(e)} onKeyPress={e=>{handleKeyPress(e)}}/>\r\n          </Col>\r\n          <Col>\r\n            {/* <Button variant=\"dark\" type=\"button\" onClick={e => handleMousePress(e)}>\r\n              Submit\r\n            </Button> */}\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <div>\r\n          <MusicList error={error} songs={results}></MusicList>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default Page1;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './weatherData.css'\r\nfunction WeatherData(props) {\r\n    if(props.error===true)\r\n    return(\r\n        <div>\r\n            <img src=\"https://i1.sndcdn.com/artworks-000606461494-jcvqjg-t300x300.jpg\" alt=\"error not found\"></img>\r\n        </div>\r\n    );\r\n    if(props.found===false){\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n   else{\r\n       console.log(\"test\",props.data)\r\n       const time1=props.data.sys.sunset*1000;\r\n       const time2=props.data.sys.sunrise*1000;\r\n       const temp1= new Date(time1);\r\n       const temp2= new Date(time2);\r\n       console.log(\"time\",temp1);\r\n       console.log(\"time\", temp2);\r\n       console.log('http://openweathermap.org/img/wn/'+props.data.weather[0].icon+'@2x.png')\r\n       return <div>\r\n                <div className=\"WeatherDataBox\">\r\n                    <div className=\"WeatherDataInfo\">\r\n                        <h1 style={{color:\"white\"}}> {props.data.name} ,{props.data.sys.country}</h1>\r\n                        <img style={{width:\"100px\",height:\"100px\"}} src={'http://openweathermap.org/img/wn/'+props.data.weather[0].icon+'@2x.png'}></img>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div>   \r\n                <div className=\"space\">\r\n                        <h4 style={{color:\"white\"}}>Weather: {props.data.weather[0].main}</h4>\r\n                        <h4 style={{color:\"white\"}}>Temperature:{props.data.main.temp } °C</h4>\r\n                        </div>\r\n                      <hr></hr>\r\n                      <div className=\"space\">\r\n                            <h4 style={{color:\"white\"}}>Sunset: {temp1.toLocaleTimeString()}</h4>\r\n                            <h4 style={{color:\"white\"}}>Sunrise: {temp2.toLocaleTimeString()}</h4>\r\n                      </div>\r\n                      <hr></hr>\r\n                      <div className=\"space\">\r\n                            <h4 style={{color:\"white\"}}>Humidity: {props.data.main.humidity}%</h4>\r\n                            <h4 style={{color:\"white\"}}>Pressure: {props.data.main.pressure} hpa</h4>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"space\">\r\n                            <h4 style={{color:\"white\"}}>Wind: {props.data.wind.speed} m/s,({props.data.wind.deg}°)</h4>\r\n                            <h4 style={{color:\"white\"}}>Feels like: {props.data.main.feels_like}°C</h4>\r\n                            </div>\r\n                </div>\r\n              </div>\r\n   }\r\n//react router\r\n   }\r\nexport default WeatherData;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport WeatherData from './weatherData'\r\n\r\nfunction Page2() {\r\n\r\n    const [search, setSearch] = useState(\"\");// Search bar value\r\n    const [found, setFound] = useState(false);// Search bar value\r\n    const [error, setError] = useState(false);\r\n    const [results,setResults] = useState([]);\r\n\r\n    const handleKeyPress=(e)=>{\r\n        if(e.charCode==13){\r\n            e.preventDefault();\r\n            console.log(\"enter pressed\")\r\n            console.log(search)\r\n            const string = search.replace(\" \",\"+\");\r\n            console.log(string);\r\n\r\n            axios.get('https://api.openweathermap.org/data/2.5/weather?q='+string+'&APPID=ee37614a227594930a06b3b82ee3581e&units=metric')\r\n            .then(res => {\r\n            //   const persons = res.data;\r\n            //   this.setState({ persons });\r\n            console.log(res.data) //res.data.resultCount for number , res.data.results for []\r\n            setResults(res.data);\r\n            setFound(true);\r\n            setError(false);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                setError(true);\r\n                setFound(false);\r\n            });\r\n            \r\n        } \r\n      }\r\n\r\n    const handleInput = event => {//saves Search bar value for later use\r\n        setSearch(event.target.value);\r\n        console.log(search)\r\n      };\r\n  return (\r\n    <div className=\"Page2\">\r\n        <h1 style={{color:\"white\"}}>Enter Country name of which you want the current weather:</h1>\r\n           <Form>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control placeholder=\"Search here\" onChange={e => handleInput(e)} onKeyPress={e=>{handleKeyPress(e)}}/>\r\n          </Col>\r\n          <Col>\r\n            {/* <Button variant=\"dark\" type=\"button\" onClick={e => handleMousePress(e)}>\r\n              Submit\r\n            </Button> */}\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <div>\r\n          <WeatherData data={results} error={error} found={found}></WeatherData>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default Page2;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport './imageItem.css'\r\nfunction ImageItem(props) {\r\n  return (\r\n    <div className=\"ImageItem\">\r\n      {/* <img style={{width:\"19vw\",height:\"25vh\",marginLeft:\"0.25vw\"}} src={props.data.largeImageURL}></img> */}\r\n      <ModalImage\r\n      className=\"ImageItemImage\"\r\n        small={props.data.largeImageURL}\r\n        large={props.data.largeImageURL}\r\n            />    \r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default ImageItem;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport ImageItem from './imageItem'\r\nimport './imageList.css'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction imageList(props) {\r\n\r\n    if(props.error===true){\r\n      return <div>\r\n        <h1 style={{color:\"Red\"}}>Error, no images found</h1>\r\n      </div>\r\n    }\r\n    if(props.images.length>0)\r\n    {\r\n        const content = props.images.map(id => {\r\n      return (\r\n            <ImageItem key={id.id} data={id}></ImageItem>\r\n  \r\n      );\r\n    });\r\n    return <Container>\r\n\r\n                <div className=\"ImageList\">\r\n                    {content}\r\n                </div>\r\n\r\n        </Container>\r\n    }\r\n    else\r\n     return <div></div>\r\n}\r\n//react router\r\nexport default imageList;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport ImageList from './imageList'\r\n\r\nfunction Page3() {\r\n\r\n    const [search, setSearch] = useState(\"\");// Search bar value\r\n    const [found, setFound] = useState(false);// Search bar value\r\n    const [error, setError] = useState(false);\r\n    const [results,setResults] = useState([]);\r\n\r\n    const handleKeyPress=(e)=>{\r\n        if(e.charCode==13){\r\n            e.preventDefault();\r\n            console.log(\"enter pressed\")\r\n            console.log(search)\r\n            const string = search.replace(\" \",\"+\");\r\n            console.log(string);\r\n\r\n            axios.get('https://pixabay.com/api/?key='+'15155343-ed137ac5ecda5d8ec0e305584'+'&q='+search)\r\n            .then(res => {\r\n            //   const persons = res.data;\r\n            //   this.setState({ persons });\r\n            console.log(res.data) //res.data.resultCount for number , res.data.results for []\r\n            setResults(res.data.hits);\r\n            setFound(true);\r\n            setError(false);\r\n            if(res.data.totalHits===0)\r\n            {\r\n                setError(true);\r\n            }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                setError(true);\r\n                setFound(false);\r\n            });\r\n            \r\n        } \r\n      }\r\n\r\n    const handleInput = event => {//saves Search bar value for later use\r\n        setSearch(event.target.value);\r\n        console.log(search)\r\n      };\r\n  return (\r\n    <div className=\"Page3\">\r\n        <h1 style={{color:\"white\"}}>Search Images:</h1>\r\n           <Form>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control placeholder=\"Search here\" onChange={e => handleInput(e)} onKeyPress={e=>{handleKeyPress(e)}}/>\r\n          </Col>\r\n          <Col>\r\n            {/* <Button variant=\"dark\" type=\"button\" onClick={e => handleMousePress(e)}>\r\n              Submit\r\n            </Button> */}\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <div>\r\n         <ImageList images={results} error={error} found={found}></ImageList>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default Page3;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <ul>\r\n         <li>\r\n                <Link to=\"/\">Home Page</Link>\r\n         </li>\r\n         <li>\r\n                <Link to=\"/page1\">page1</Link>\r\n         </li>\r\n          <li>\r\n                <Link to=\"/page2\">page2</Link>\r\n         </li>\r\n         <li>\r\n                <Link to=\"/page3\">page3</Link>\r\n         </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Mainpage() {\r\n  return (\r\n    <div className=\"mainPage\">\r\n      <h1>Welcome! , Choose a destination.</h1>\r\n      <img src=\"https://i.pinimg.com/236x/41/3f/97/413f97ee1f8b137a5454b3c775f5b8cb.jpg\"></img>\r\n    </div>\r\n  );\r\n}\r\n//react router\r\nexport default Mainpage;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Page1 from './components/page1/page1'\nimport Page2 from './components/page2/page2'\nimport Page3 from './components/page3/page3'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Navbar from './components/navbar'\nimport Mainpage from './components/mainpage/mainpage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Navbar></Navbar>\n        <div>\n          <Route exact path=\"/\" component={Mainpage} />\n          <Route path=\"/page1\" component={Page1} />\n          <Route path=\"/page2\" component={Page2} />\n          <Route path=\"/page3\" component={Page3}/>\n        </div>\n        <hr></hr>\n        <h3 style={{color:\"grey\"}}>Web final project by shani</h3>\n      </Router>\n    </div>\n  );\n}\n//react router\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}